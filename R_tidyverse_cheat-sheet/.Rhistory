#load dplyr library
library(dplyr)
#create example dfs, picture: join_dfs.png
data_1 <- data.frame(ID = 1:2,
x_1 = c("a_1", "a_2"),
stringsAsFactors = FALSE) #determines how character vectors should be treated. F = stay as characters and do not convert to factors
data_2 <- data.frame(ID = 2:3,
x_2 = c("b_1", "b_2"),
stringsAsFactors = False)
#load dplyr library
library(dplyr)
#create example dfs, picture: join_dfs.png
data_1 <- data.frame(ID = 1:2,
x_1 = c("a_1", "a_2"),
stringsAsFactors = FALSE) #determines how character vectors should be treated. F = stay as characters and do not convert to factors
data_2 <- data.frame(ID = 2:3,
x_2 = c("b_1", "b_2"),
stringsAsFactors = FALSE)
#anti_join
anti_join(data_1, data_2, by = "ID") %>% #similar to semi_joins but keeps the rows which are not in data_2
View()
#this join cna create NAs
full_join(data_1, data_2, by = "ID") %>% #joins all
View()
#INSERT read_csv(FILE_PATH)
getwd()
setwd("C:/prog/R_cheat-sheets/R_tidyverse_cheat-sheet")
#import csv files
mtv_1 <- read_csv("MTV 1.csv", header = TRUE) #header = TRUE ensures that R knows about the column names
#load packages####
library(dplyr)
library(stringr)
library(readr)
library(lubridate)
library(tidyr)
#load data frames####
#INSERT read_csv(FILE_PATH)
getwd() #gets the current working directory
setwd("C:/prog/R_cheat-sheets/R_tidyverse_cheat-sheet")
#import csv files
mtv_1 <- read_csv("MTV 1.csv", header = TRUE) #header = TRUE ensures that R knows about the column names
#load data frames####
#INSERT read_csv(FILE_PATH)
getwd() #gets the current working directory
setwd("C:/prog/R_cheat-sheets/R_tidyverse_cheat-sheet")
#import csv files
mtv_1 <- read_csv("MTV 1.csv") #header = TRUE ensures that R knows about the column names
mtv_2 <- read_csv("MTV 2.csv")
mtv_3 <- read_csv("MTV 3.csv")
mtv_4 <- read_csv("MTV 4.csv")
mtv_df <- bind_rows( #combines the imported dfs to one
mtv_1,
mtv_2,
mtv_3,
mtv_4)
mtv_df_lower <- mtv_df %>%
mutate(
across(
.cols = where(is.character), tolower))
View(mtv_df_lower)
# ---------------------------------------------------------------------------------------------------------
# shp19 JOIN shp covid
shp19_p_joined_shp_covid <- inner_join(shp19_p_filtered, shp_covid, by = "IDPERS")
